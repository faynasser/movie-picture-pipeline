name: Backend Continuous Integration
on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yaml"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Install deps (pipenv if Pipfile exists; else requirements.txt)
      - name: Install dependencies (backend)
        run: |
          if [ -f backend/Pipfile ]; then
            python -m pip install --upgrade pip pipenv
            cd backend
            pipenv install --dev
          else
            python -m pip install --upgrade pip
            if [ -f backend/requirements.txt ]; then
              python -m pip install -r backend/requirements.txt
            fi
            # Ensure linters & test tools exist
            python -m pip install pytest pylint
          fi

      # Lint (pipenv or direct)
      - name: Lint
        run: |
          if [ -f backend/Pipfile ]; then
            cd backend
            pipenv run pylint .
          else
            pylint backend
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies (backend)
        run: |
          if [ -f backend/Pipfile ]; then
            python -m pip install --upgrade pip pipenv
            cd backend
            pipenv install --dev
          else
            python -m pip install --upgrade pip
            if [ -f backend/requirements.txt ]; then
              python -m pip install -r backend/requirements.txt
            fi
            python -m pip install pytest
          fi

      - name: Run tests
        run: |
          if [ -f backend/Pipfile ]; then
            cd backend
            pipenv run pytest
          else
            pytest -q backend
          fi

  build:
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    steps:
      - uses: actions/checkout@v4
      - name: Docker build (smoke)
        run: docker build -t movie-backend:ci-test ./backend
