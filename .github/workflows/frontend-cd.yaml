name: Frontend Continuous Deployment
on:
  push:
    branches: [ "main" ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-cd.yaml"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: movie-frontend
  IMAGE_TAG: ${{ github.sha }}
  K8S_NAMESPACE: movie

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
        working-directory: frontend
      - run: npm run lint
        working-directory: frontend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
        working-directory: frontend
      - run: npm run test -- --watch=false
        working-directory: frontend

  build_push_deploy:
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci && npm run build
        working-directory: frontend

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        run: |
          docker build -t $env:ECR_REPOSITORY:$env:IMAGE_TAG ./frontend
          docker tag $env:ECR_REPOSITORY:$env:IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$env:ECR_REPOSITORY:$env:IMAGE_TAG
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$env:ECR_REPOSITORY:$env:IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -sSLO https://storage.googleapis.com/kubernetes-release/release/v1.29.6/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl

      - name: Set kubeconfig from secret
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      - run: kubectl get ns ${{ env.K8S_NAMESPACE }} || kubectl create ns ${{ env.K8S_NAMESPACE }}

      - name: Set image on deployment
        run: |
          kubectl -n ${{ env.K8S_NAMESPACE }} set image deployment/movie-frontend movie-frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
